From ffb3ab2bea180388ce5bd6c603972b4e636b7d41 Mon Sep 17 00:00:00 2001
From: Ryan Sullivan <rysulliv@redhat.com>
Date: Tue, 25 Jul 2023 13:46:36 -0400
Subject: [KPATCH CVE-2023-1829] kpatch fixes for CVE-2023-1829

Kernels:
4.18.0-477.10.1.el8_8
4.18.0-477.13.1.el8_8
4.18.0-477.15.1.el8_8


Kpatch-MR: https://gitlab.com/redhat/prdsc/rhel/src/kpatch/rhel-8/-/merge_requests/122
Approved-by: Yannick Cote (@ycote1)
Changes since last build:
[x86_64]:
cls_tcindex.o: changed function: tcindex_set_parms
l2cap_core.o: changed function: l2cap_recv_frame
l2cap_core.o: new function: klp_l2cap_le_sig_cmd

[ppc64le]:
cls_tcindex.o: changed function: tcindex_set_parms
l2cap_core.o: changed function: l2cap_recv_frame

---------------------------

Modifications: none

commit 9b4f65cc34457266830e052b71988e6f4eed6464
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Wed May 24 17:21:13 2023 +0200

    net/sched: cls_tcindex: downgrade to imperfect hash

    Bugzilla: https://bugzilla.redhat.com/2192307
    CVE: CVE-2023-1829
    Y-commit: 53f9338eccb9f6f46e0b26a2e15bcc724209f9a7

    O-Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=2192308
    Upstream Status: RHEL-only patch
    Tested: using perf on tcindex_lookup(), verified that p->perfect is NULL and
       classification is done through "imperfect" key lookup for several values
       of hash, mask and shift

    the access to tcindex "perfect hash" memory area has been reported to be
    problematic when filters are removed and changed at the same time. Rather
    than providing a fix, the upstream community decided to retire the tcindex
    classifier [1] since it has (almost) zero users at the moment.

    On RHEL8 we can preserve the functionality of "imperfect hash", and just
    downgrade cls_tcindex to always use imperfect hash, like Florian suggested.

    [1] https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=8c710f75256bb3cf05ac7b1672c82b92c43f3d28

    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    [Fixed contex differences conflict]
    Signed-off-by: Lucas Zampieri <lzampier@redhat.com>

Signed-off-by: Ryan Sullivan <rysulliv@redhat.com>
---
 net/sched/cls_tcindex.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/net/sched/cls_tcindex.c b/net/sched/cls_tcindex.c
index df229a8089c9..909f599dba45 100644
--- a/net/sched/cls_tcindex.c
+++ b/net/sched/cls_tcindex.c
@@ -253,10 +253,10 @@ static void tcindex_destroy_work(struct work_struct *work)
 	tcindex_data_put(p);
 }
 
-static inline int
+static inline bool
 valid_perfect_hash(struct tcindex_data *p)
 {
-	return  p->hash > (p->mask >> p->shift);
+	return false;
 }
 
 static const struct nla_policy tcindex_policy[TCA_TCINDEX_MAX + 1] = {
-- 
2.40.1


